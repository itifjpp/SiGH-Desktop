/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package views.empleados;

import controllers.ctrConfig;
import controllers.ctrlEmpleados;
import controllers.tableModel;
import views.Principal;
import static views.Principal.jdpEscritorio;
import java.awt.event.*;
import java.awt.*;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.ImageIcon;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import views.Principal;

/**
 *
 * @author rana
 */
public class jifEmpleados extends javax.swing.JInternalFrame {

    /**
     * Creates new form jifEmpleados
     */
    public jifEmpleados() {
        initComponents();
        tableConfig();
        tableEmpleados("Si");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jtfCampo = new javax.swing.JTextField();
        jcbAtribute = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtEmpleados = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jbtBuscar = new javax.swing.JButton();

        setClosable(true);
        setTitle("EMPLEADOS");

        jLabel1.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        jLabel1.setText("BUSCAR EMPLEADO");

        jtfCampo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtfCampoKeyReleased(evt);
            }
        });

        jcbAtribute.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "empleado_id", "empleado_nombre", "empleado_matricula" }));

        jtEmpleados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jtEmpleados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtEmpleadosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtEmpleados);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/add (1).png"))); // NOI18N
        jButton1.setBorderPainted(false);
        jButton1.setContentAreaFilled(false);

        jbtBuscar.setText("BUSCAR");
        jbtBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtBuscarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addGap(16, 16, 16))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jcbAtribute, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtfCampo, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbtBuscar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 165, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtfCampo, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jcbAtribute, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jbtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 279, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtfCampoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfCampoKeyReleased
        
    }//GEN-LAST:event_jtfCampoKeyReleased

    private void jbtBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtBuscarActionPerformed
        tableEmpleados("Si");
    }//GEN-LAST:event_jbtBuscarActionPerformed

    private void jtEmpleadosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtEmpleadosMouseClicked
        int row = jtEmpleados.rowAtPoint(evt.getPoint());
        int col = jtEmpleados.columnAtPoint(evt.getPoint());
        
        if ( row >= 0 && col >= 0 ) {   
            //si celda contiene imagen
            if( model.getValueAt(row, col) != null ){
                int intEmpleadoId=(Integer)jtEmpleados.getValueAt(row, 0);
                String strValue=jtEmpleados.getValueAt(row, col).toString();
                if(strValue.equals("EDITAR")){
                    jifEmpleado empleado=new jifEmpleado();
                    Principal.jdpEscritorio.add(empleado);
                    empleado.obtenerInformacionEmpleado(intEmpleadoId);
                    Dimension desktopSize = jdpEscritorio.getSize();
                    Dimension FrameSize = empleado.getSize();
                    empleado.setLocation((desktopSize.width - FrameSize.width)/2,(desktopSize.height-FrameSize.height)/2);  
                    empleado.moveToFront();
                    empleado.setVisible(true);
                }else if(strValue.equals("ELIMINAR")){
                    
                }

            }                             
        }
    }//GEN-LAST:event_jtEmpleadosMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbtBuscar;
    private javax.swing.JComboBox<String> jcbAtribute;
    private javax.swing.JTable jtEmpleados;
    private javax.swing.JTextField jtfCampo;
    // End of variables declaration//GEN-END:variables
    DefaultTableModel model=new DefaultTableModel();
    public void tableConfig(){
        model=new DefaultTableModel(){//INDICAMOS QUE NO QUEREMOS QUE LAS CELDAS SEAN EDITABLES
            public boolean isCellEditable(int intRow, int intCol){
                return false;
            }
        };
        model.addColumn("NÂ°");
        model.addColumn("MATRICULA");
        model.addColumn("NOMBRE");
        model.addColumn("APELLIDOS");
        model.addColumn("CATEGORIA");
        model.addColumn("");
        model.addColumn("");
        jtEmpleados.setModel(model);
        /*ESTABLECEMOS LAS DIMENCIONES DE LAS CELDAS DEL ENCABEZADO*/
        jtEmpleados.getColumnModel().getColumn(0).setMaxWidth(50);
        jtEmpleados.getColumnModel().getColumn(1).setMaxWidth(100);
        jtEmpleados.getColumnModel().getColumn(2).setMaxWidth(200);
        jtEmpleados.getColumnModel().getColumn(3).setMaxWidth(200);
        jtEmpleados.getColumnModel().getColumn(4).setMaxWidth(200);
        jtEmpleados.getColumnModel().getColumn(5).setMaxWidth(60);
        jtEmpleados.getColumnModel().getColumn(6).setMaxWidth(65);
        //jtEmpleados.setAutoResizeMode(JTable.AUTO_RESIZE_LAST_COLUMN);
        /*INDICAMOS QUE LOS ENCABEZADOS NO SE PUEDAD REORDENAR*/
        jtEmpleados.getTableHeader().setReorderingAllowed(false);
    }
    public void tableEmpleados(String strFiltro){
        /*REMOVEMOS TODAS LAS FILAS DEL MODELO PARA POSTERIORMENTE AGREGAR LAS NUEVAS*/
        for (int i = jtEmpleados.getRowCount()-1; i >=0; i--) {
            model.removeRow(i);
        }
        try {
            ResultSet rs=null;
            if(strFiltro.equals("No")){
                rs=ctrlEmpleados.getEmpleados();
            }else{
                rs=ctrlEmpleados.getEmpleadoLike(jtfCampo.getText(), jcbAtribute.getSelectedItem().toString());
            }
            while (rs.next()) {                
                Object object[]={
                    rs.getInt("empleado_id"),rs.getString("empleado_matricula"),rs.getString("empleado_nombre"),
                    rs.getString("empleado_apellidos"),rs.getString("empleado_categoria"),"EDITAR","ELIMINAR"
                };
                jtEmpleados.getColumnModel().getColumn(5).setCellRenderer(new tableModel());
                jtEmpleados.getColumnModel().getColumn(6).setCellRenderer(new tableModel());
                model.addRow(object);
                jtEmpleados.setModel(model);
            }
        } catch (SQLException e) {
            e.getMessage();
            ctrConfig.msjError("ERROR AL OBTENER LA LISTA DE EMPLEADOS");
        }
    }
}
