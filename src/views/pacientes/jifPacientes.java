/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package views.pacientes;

import controllers.ctrConfig;
import controllers.ctrlEmpleados;
import controllers.ctrlPacientes;
import controllers.tableModel;
import java.awt.Dimension;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.table.DefaultTableModel;
import views.Principal;
import static views.Principal.jdpEscritorio;

/**
 *
 * @author felipe de jesus
 */
public class jifPacientes extends javax.swing.JInternalFrame {

    /**
     * Creates new form jifPacientes
     */
    public jifPacientes() {
        initComponents();
        tableConfig();
        tablePacientes("Si");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jcbAtribute = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtblPacientes = new javax.swing.JTable();
        jbtBuscar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jtfCampo = new javax.swing.JTextField();

        setClosable(true);
        setTitle("PACIENTES");

        jcbAtribute.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "paciente_id", "paciente_nss", "paciente_nombre" }));

        jtblPacientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jtblPacientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtblPacientesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtblPacientes);

        jbtBuscar.setText("BUSCAR");
        jbtBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtBuscarActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        jLabel1.setText("BUSCAR PACIENTE");

        jtfCampo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtfCampoKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jcbAtribute, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jtfCampo, javax.swing.GroupLayout.PREFERRED_SIZE, 413, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbtBuscar))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 644, Short.MAX_VALUE))
                .addGap(16, 16, 16))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfCampo, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbAtribute, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 189, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtblPacientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtblPacientesMouseClicked
        int row = jtblPacientes.rowAtPoint(evt.getPoint());
        int col = jtblPacientes.columnAtPoint(evt.getPoint());

        if ( row >= 0 && col >= 0 ) {
            //si celda contiene imagen
            if( model.getValueAt(row, col) != null ){
                int intEmpleadoPaciente=(Integer)jtblPacientes.getValueAt(row, 0);
                String strValue=jtblPacientes.getValueAt(row, col).toString();
                if(strValue.equals("EDITAR")){
                    jifPaciente empleado=new jifPaciente();
                    Principal.jdpEscritorio.add(empleado);
                    empleado.obtenerInformacionPaciente(intEmpleadoPaciente);
                    Dimension desktopSize = jdpEscritorio.getSize();
                    Dimension FrameSize = empleado.getSize();
                    empleado.setLocation((desktopSize.width - FrameSize.width)/2,(desktopSize.height-FrameSize.height)/2);
                    empleado.moveToFront();
                    empleado.setVisible(true);
                }else if(strValue.equals("ELIMINAR")){

                }

            }
        }
    }//GEN-LAST:event_jtblPacientesMouseClicked

    private void jbtBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtBuscarActionPerformed
        tablePacientes("Si");
    }//GEN-LAST:event_jbtBuscarActionPerformed

    private void jtfCampoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfCampoKeyReleased

    }//GEN-LAST:event_jtfCampoKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbtBuscar;
    private javax.swing.JComboBox<String> jcbAtribute;
    private javax.swing.JTable jtblPacientes;
    private javax.swing.JTextField jtfCampo;
    // End of variables declaration//GEN-END:variables

    DefaultTableModel model=new DefaultTableModel();
    public void tableConfig(){
        model=new DefaultTableModel(){//INDICAMOS QUE NO QUEREMOS QUE LAS CELDAS SEAN EDITABLES
            public boolean isCellEditable(int intRow, int intCol){
                return false;
            }
        };
        model.addColumn("NÂ°");
        model.addColumn("NSS");
        model.addColumn("NOMBRE");
        model.addColumn("APELLIDOS");
        model.addColumn("F. NAC");
        model.addColumn("");
        model.addColumn("");
        jtblPacientes.setModel(model);
        /*ESTABLECEMOS LAS DIMENCIONES DE LAS CELDAS DEL ENCABEZADO*/
        jtblPacientes.getColumnModel().getColumn(0).setMaxWidth(50);
        jtblPacientes.getColumnModel().getColumn(1).setMaxWidth(100);
        jtblPacientes.getColumnModel().getColumn(2).setMaxWidth(200);
        jtblPacientes.getColumnModel().getColumn(3).setMaxWidth(200);
        jtblPacientes.getColumnModel().getColumn(4).setMaxWidth(200);
        jtblPacientes.getColumnModel().getColumn(5).setMaxWidth(60);
        jtblPacientes.getColumnModel().getColumn(6).setMaxWidth(65);
        //jtEmpleados.setAutoResizeMode(JTable.AUTO_RESIZE_LAST_COLUMN);
        /*INDICAMOS QUE LOS ENCABEZADOS NO SE PUEDAD REORDENAR*/
        jtblPacientes.getTableHeader().setReorderingAllowed(false);
    }
    public void tablePacientes(String strFiltro){
        /*REMOVEMOS TODAS LAS FILAS DEL MODELO PARA POSTERIORMENTE AGREGAR LAS NUEVAS*/
        for (int i = jtblPacientes.getRowCount()-1; i >=0; i--) {
            model.removeRow(i);
        }
        try {
            ResultSet rs=null;
            if(strFiltro.equals("No")){
                rs=ctrlPacientes.getPacientes();
            }else{
                rs=ctrlPacientes.getPacientesLike(jtfCampo.getText(), jcbAtribute.getSelectedItem().toString());
            }
            while (rs.next()) {                
                Object object[]={
                    rs.getInt("paciente_id"),rs.getString("paciente_nss")+" "+rs.getString("paciente_nss_agregado"),rs.getString("paciente_nombre"),
                    rs.getString("paciente_ap")+" "+rs.getString("paciente_am"),rs.getString("paciente_fn"),"EDITAR","ELIMINAR"
                };
                jtblPacientes.getColumnModel().getColumn(5).setCellRenderer(new tableModel());
                jtblPacientes.getColumnModel().getColumn(6).setCellRenderer(new tableModel());
                model.addRow(object);
                jtblPacientes.setModel(model);
            }
        } catch (SQLException e) {
            e.getMessage();
            ctrConfig.msjError("ERROR AL OBTENER LA LISTA DE PACIENTES: "+e.getMessage());
        }
    }
}
